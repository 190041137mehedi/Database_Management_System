----1.
SELECT ('ACTOR' || ': ' ||ACT_FIRSTNAME || ' ' || ACT_LASTNAME) NAME
FROM ACTOR
WHERE ACT_FIRSTNAME IS NOT NULL AND ACT_LASTNAME IS NOT NULL
UNION
SELECT ('DIRECTOR' || ': ' || DIR_FIRSTNAME || ' ' || DIR_LASTNAME) 
FROM DIRECTOR
WHERE DIR_FIRSTNAME IS NOT NULL AND DIR_LASTNAME IS NOT NULL
UNION
SELECT ('REVIEWER' || ': ' || REV_NAME)
FROM REVIEWER
WHERE REV_NAME IS NOT NULL;

----2.
SELECT MOV_TITLE 
FROM MOVIE
WHERE MOV_ID NOT IN (SELECT MOV_ID
                    FROM RATING);
----3.
SELECT MOV_TITLE
FROM ACTOR NATURAL JOIN CASTS NATURAL JOIN MOVIE NATURAL JOIN DIRECTION NATURAL JOIN DIRECTOR
WHERE ACT_FIRSTNAME <> DIR_FIRSTNAME AND ACT_LASTNAME <> DIR_LASTNAME;

----4.
SELECT MOV_TITLE, MAX(REV_STARS) as Maximum_Rating, AVG(REV_STARS) as AVERAGE_RATING
FROM MOVIE NATURAL JOIN RATING
GROUP BY MOV_TITLE
ORDER BY AVG(REV_STARS) DESC;

----5.
SELECT MOV_TITLE, AVG(REV_STARS) as AVERAGE_RATING
FROM MOVIE NATURAL JOIN RATING
GROUP BY MOV_TITLE
HAVING AVG(REV_STARS) < (SELECT AVG(REV_STARS)
                                FROM RATING);

--06.
SELECT ROLE, ACT_FIRSTNAME , ACT_LASTNAME , COUNT(REV_STARS) as RATING_COUNT
FROM ACTOR NATURAL JOIN CASTS NATURAL JOIN MOVIE NATURAL JOIN RATING
GROUP BY ROLE , ACT_FIRSTNAME, ACT_LASTNAME;

--07.
SELECT S.MOV_COUNTRY, S.GEN_TITLE, MOVIENUM
FROM
    (SELECT MOV_COUNTRY, GEN_TITLE, COUNT(MOV_ID) AS MOVIENUM
    FROM MOVIE NATURAL JOIN GENRES NATURAL JOIN MTYPE
    GROUP BY MOV_COUNTRY, GEN_TITLE) S,
    (SELECT MOV_COUNTRY, MAX(MOVIENUM) MAXNUM
    FROM(
        SELECT MOV_COUNTRY, GEN_TITLE, COUNT(MOV_ID) AS MOVIENUM
        FROM MOVIE NATURAL JOIN GENRES NATURAL JOIN MTYPE
        GROUP BY MOV_COUNTRY, GEN_TITLE)
    GROUP BY MOV_COUNTRY) T
WHERE S.MOV_COUNTRY=T.MOV_COUNTRY AND MOVIENUM IN MAXNUM
ORDER BY S.MOV_COUNTRY;

----08.
SELECT S.MOV_TITLE, S.MAX_RAT, DIR_FIRSTNAME, DIR_LASTNAME
FROM (SELECT MOV_TITLE, MAX(REV_STARS) AS MAX_RAT
            FROM MOVIE NATURAL JOIN RATING
            GROUP BY MOV_TITLE) S, MOVIE V, DIRECTION T, DIRECTOR C
WHERE S.MOV_TITLE=V.MOV_TITLE AND V.MOV_ID=T.MOV_ID AND T.DIR_ID=C.DIR_ID AND
MAX_RAT<=ALL (SELECT MAX(REV_STARS) AS MAX_RAT
            FROM MOVIE NATURAL JOIN RATING
            GROUP BY MOV_TITLE); 

----09.
SELECT GENRES.GEN_TITLE
FROM GENRES NATURAL JOIN MTYPE
WHERE MTYPE.MOV_ID IN 
    (SELECT CASTS.MOV_ID
    FROM ACTOR NATURAL JOIN CASTS
    WHERE ACTOR.ACT_GENDER='F')
HAVING COUNT(MTYPE.MOV_ID) >= ALL(SELECT COUNT(MTYPE.MOV_ID) 
                                    FROM GENRES NATURAL JOIN MTYPE
                                    WHERE MTYPE.MOV_ID IN 
                                        (SELECT CASTS.MOV_ID
                                        FROM ACTOR NATURAL JOIN CASTS
                                        WHERE ACTOR.ACT_GENDER='F')
                                    GROUP BY GENRES.GEN_TITLE)
GROUP BY GENRES.GEN_TITLE;

----10.
SELECT NVL(REV_NAME,'UNKNOWN'), REVIEWER.REV_ID, MOV_TITLE
FROM RATING, REVIEWER, MOVIE, (SELECT MOV_ID, ROWNUM 
                        FROM(SELECT MOV_ID, COUNT(REV_STARS)
                            FROM MOVIE NATURAL JOIN RATING
                            WHERE REV_STARS IN (SELECT MIN(REV_STARS) FROM RATING)
                            GROUP BY MOV_ID
                            ORDER BY COUNT(REV_STARS) DESC)
                        WHERE ROWNUM=1) R
WHERE MOVIE.MOV_ID=RATING.MOV_ID AND RATING.MOV_ID=R.MOV_ID AND RATING.REV_ID=REVIEWER.REV_ID;

----11.
SELECT DISTINCT (NVL(DIR_FIRSTNAME,'UNKOWN')||' '||NVL(DIR_LASTNAME,'DIRECTOR')), MOV_ID, POSITION
FROM DIRECTOR RIGHT JOIN (
    SELECT DIR_ID, R.MOV_ID AS MOV_ID, POSITION 
    FROM (SELECT MOV_ID, AVERAGE_RATING, ROWNUM AS POSITION
            FROM (SELECT MOV_ID, AVG(REV_STARS) AVERAGE_RATING
                FROM RATING
                GROUP BY MOV_ID
                ORDER BY AVERAGE_RATING DESC)) R LEFT JOIN DIRECTION ON R.MOV_ID=DIRECTION. MOV_ID 
    WHERE POSITION IN (3,4,5)) D 
ON DIRECTOR.DIR_ID=D.DIR_ID
ORDER BY POSITION;

----12.
SELECT M.GEN_TITLE
FROM (SELECT GEN_TITLE, COUNT(*) as Maleactor
        FROM ACTOR, CASTS, MTYPE, GENRES
        WHERE ACTOR.ACT_ID=CASTS.ACT_ID AND CASTS.MOV_ID=MTYPE.MOV_ID AND MTYPE.GEN_ID= GENRES.GEN_ID 
        AND ACT_GENDER='M'
        GROUP BY GEN_TITLE) M Left JOIN
        (SELECT GEN_TITLE, COUNT(*) as Femaleactor
        FROM ACTOR, CASTS, MTYPE, GENRES
        WHERE ACTOR.ACT_ID=CASTS.ACT_ID AND CASTS.MOV_ID=MTYPE.MOV_ID AND MTYPE.GEN_ID= GENRES.GEN_ID 
        AND ACT_GENDER='F'
        GROUP BY GEN_TITLE) F
on M.GEN_TITLE= F.GEN_TITLE 
WHERE Femaleactor< Maleactor or Femaleactor is NULL;